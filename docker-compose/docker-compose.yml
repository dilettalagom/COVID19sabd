version: "2"

networks:
  app_network:
    driver: bridge

#  cassandra_ring:
#    driver: default
#      #config:
#      #  subnet: 172.30.0.0/16
#      #  gateway: 172.30.0.1/16

services:

  master:
    build:
      context: ../docker-images/spark-hdfs-node
    image: dilettalagom/spark-hdfs-node
    container_name: master
    hostname: master
    networks:
      - app_network
    ports:
      - "9870:9870" # hdfs ui
      - "54310:54310" # hdfs
      - "43211:43211" #remote intellij debugging
      - "18080:18080" #spark history ui
    volumes:
      - ./target:/target
    stdin_open: true
    tty: true
    command: bash -c "sh start-services.sh"


  worker1:
    image: dilettalagom/spark-hdfs-node
    container_name: worker1
    hostname: worker1
    networks:
      - app_network
    ports:
      - "9861:9861"
    depends_on:
      - master
    volumes:
      - ./target:/target
    stdin_open: true
    tty: true
    command: bash -c "sh start-services.sh"
#
#
#  worker2:
#    image: dilettalagom/spark-hdfs-node
#    container_name: worker2
#    hostname: worker2
#    networks:
#      - app_network
#    ports:
#      - "9862:9861"
#    depends_on:
#      - master
#    volumes:
#      - ./target:/target
#    stdin_open: true
#    tty: true
#    command: bash -c "sh start-services.sh"
#
#  worker3:
#    image: dilettalagom/spark-hdfs-node
#    container_name: worker3
#    hostname: worker3
#    networks:
#      - app_network
#    ports:
#      - "9863:9861"
#    depends_on:
#      - master
#    volumes:
#      - ./target:/target
#    stdin_open: true
#    tty: true
#    command: bash -c "sh start-services.sh"
#
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - app_network
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  nifi:
    build:
      context: ../docker-images/nifi-node
    image: dilettalagom/nifi
    container_name: nifi
    depends_on:
      - master
    hostname: nifi
    networks:
      - app_network
    volumes:
      - ./nifi-flow:/usr/local/nifi-1.11.4/conf/flow
      - ./nifi-scripts:/usr/local/nifi-1.11.4/data/nifi-scripts
    ports:
      - "4040:4040"
      - "43212:43212"
      - "43210:43210" #remote intellij degugging port
    stdin_open: true
    tty: true
#
#
#  cassandra1:
#    build:
#      context: ../docker-images/cassandra-node
#    image: dilettalagom/cassandra
#    container_name: cassandra1
#    hostname: cassandra1
#    networks:
#      - app_network
#      - cassandra_ring
#    #      ipv4_address: 172.30.0.2
#    #environment:
#    volumes:
#      - ./cassandra-schemas:/opt/cassandra/schemas
#    ports:
#    #      - "7199:7199" # JMX
#    #      - "7000:7000" # cluster communication
#    #      - "7001:7001" # cluster communication (SSL)
#      - "9042" # native protocol clients : cqlsh
#    #      - "9160:9160" # thrift clients
#    stdin_open: true
#    tty: true
#
#
#  cassandra2:
#    build:
#      context: ../docker-images/cassandra-node
#    image: dilettalagom/cassandra
#    container_name: cassandra2
#    hostname: cassandra2
#    networks:
#      - app_network
#      - cassandra_ring
#    links:
#      - cassandra1:cassandra1
#    environment:
#     - CASSANDRA_SEEDS=cassandra1
#    #      ipv4_address: 172.30.0.2
#    volumes:
#      - ./cassandra-schemas:/opt/cassandra/schemas
#    ports:
#    #      - "7199:7199" # JMX
#    #      - "7000:7000" # cluster communication
#    #      - "7001:7001" # cluster communication (SSL)
#      - "9042" # native protocol clients : cqlsh
#    #     # - "9160:9160" # thrift clients
#    depends_on:
#      - cassandra1
#    stdin_open: true
#    tty: true


#  grafana:
#    image: grafana/grafana:4.5.2
#    env_file:
#      - grafana/grafana.env
#    links:
#      - prometheus:prometheus
#    ports:
#      - "3000:3000"
#    restart: always
#    volumes:
#      - ./data/grafana:/var/lib/grafana
#
  cassandra-seed:
    container_name: cassandra-seed-node
    image: cassandra:latest
    networks:
      - app_network
    ports:
      - "9042:9042"   # Native transport
      - "7199:7199"   # JMX
      - "9160:9160"   # Thrift clients

  cassandra-node-1:
    image: cassandra:latest
    command: /bin/bash -c "echo 'Waiting for seed node' && sleep 30 && /docker-entrypoint.sh cassandra -f"
    container_name: cassandra1
    hostname: cassandra1
    networks:
      - app_network
    environment:
      #- "CLUSTER_NAME=COVID19"
      - "CASSANDRA_SEEDS=cassandra-seed-node"
    depends_on:
      - "cassandra-seed"
    volumes:
      - ./cassandra-schemas:/opt/cassandra/schemas


  cassandra-node-2:
    image: cassandra:latest
    container_name: cassandra2
    hostname: cassandra2
    networks:
      - app_network
    command: /bin/bash -c "echo 'Waiting for seed node' && sleep 80 && /docker-entrypoint.sh cassandra -f"
    environment:
      #- "CLUSTER_NAME=COVID19"
      - "CASSANDRA_SEEDS=cassandra-seed-node"
    depends_on:
      - "cassandra-seed"
    volumes:
      - ./cassandra-schemas:/opt/cassandra/schemas
